paths:
  /api/users/:
    get:
      summary: Obtener a todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Usuarios obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

  /api/users/{id}:
    get:
      summary: Obtener un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a buscar
      responses:
        "200":
          description: Usuario obtenido correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: Usuario creado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar un usuario existente
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Usuario actualizado correctamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error interno del servidor

    delete:
      summary: Eliminar un usuario
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID del usuario a eliminar
      responses:
        "204":
          description: Usuario eliminado correctamente
        "500":
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        password:
          type: string
          description: Contraseña del usuario

      example:
        _id: "31sdaflaksdf"
        first_name: Lucas
        last_name: Pérez
        email: ana@ana.com
        password: esfsd1231423
